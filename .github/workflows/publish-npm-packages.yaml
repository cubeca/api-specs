name: Publish API client and server NPM packages
run-name: Publish API NPM packages @ ${{ github.sha }}
on: push
jobs:
    publish_package:
        runs-on: ubuntu-22.04
        name: Publish API client and server NPM packages
        steps:
            - name: Checkout ${{ github.repository }}
              uses: actions/checkout@v3

            - name: Set BRANCH_HASH env var
              run: echo "BRANCH_HASH=$(echo -n '${{ github.ref_name }}' | sha256sum | cut -b 1-12)" >> $GITHUB_ENV

            - name: Determine new version if any
              id: determine_version
              uses: mathieudutour/github-tag-action@v6.1
              with:
                  # Calculate the new version early on, so it is available in all deployment steps.
                  # But do not create a git tag just yet, in case anything goes wrong during deployment.
                  dry_run: true
                  tag_prefix: ""

                  # Since the full version string goes onto permanent record at npmjs.org,
                  # we conceal the branch name which would get appended by default.
                  append_to_pre_release_tag: prerelease-${{ env.BRANCH_HASH }}

                  custom_release_rules: patch:patch,fix:patch,bug:patch,chore:patch,minor:minor,feat:minor,feature:minor,major:major,breaking:major
                  github_token: ${{ secrets.GITHUB_TOKEN }}

            - name: Set up node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 16

            - name: "Run make ci_gha"
              env:
                  PREVIOUS_TAG: "${{ steps.determine_version.outputs.previous_tag }}"
                  NEW_TAG: "${{ steps.determine_version.outputs.new_tag }}"
                  PREVIOUS_VERSION: "${{ steps.determine_version.outputs.previous_version }}"
                  NEW_VERSION: "${{ steps.determine_version.outputs.new_version }}"
                  RELEASE_TYPE: "${{ steps.determine_version.outputs.release_type }}"
                  CHANGELOG: "${{ steps.determine_version.outputs.changelog }}"
              run: |
                  make ci_gha

            - name: Authenticate with npmjs.org to publish packages
              run: |
                  ./scripts/write_npmrc_npmjs.sh ./build/gen/typescript-axios/cube-svc/.npmrc '${{ secrets.NPMJS_ACCESS_TOKEN }}'
                  ./scripts/write_npmrc_npmjs.sh ./build/gen/single-spec-bundled-npm-pkg/cube-svc/.npmrc '${{ secrets.NPMJS_ACCESS_TOKEN }}'
                  ./scripts/write_npmrc_npmjs.sh ./build/gen/single-spec-bundled-npm-pkg/cloudflare/.npmrc '${{ secrets.NPMJS_ACCESS_TOKEN }}'
                  ./scripts/write_npmrc_npmjs.sh ./build/gen/single-spec-bundled-npm-pkg/content/.npmrc '${{ secrets.NPMJS_ACCESS_TOKEN }}'
                  ./scripts/write_npmrc_npmjs.sh ./build/gen/single-spec-bundled-npm-pkg/identity/.npmrc '${{ secrets.NPMJS_ACCESS_TOKEN }}'
                  ./scripts/write_npmrc_npmjs.sh ./build/gen/single-spec-bundled-npm-pkg/profile/.npmrc '${{ secrets.NPMJS_ACCESS_TOKEN }}'
                  ./scripts/write_npmrc_npmjs.sh ./build/gen/all-specs-unbundled-npm-pkg/.npmrc '${{ secrets.NPMJS_ACCESS_TOKEN }}'

            - name: Tag version and push tag
              id: tag_version_and_push
              uses: mathieudutour/github-tag-action@v6.1
              with:
                  custom_tag: ${{ steps.determine_version.outputs.new_tag }}
                  create_annotated_tag: true
                  tag_prefix: ""
                  custom_release_rules: patch:patch,fix:patch,bug:patch,chore:patch,minor:minor,feat:minor,feature:minor,major:major,breaking:major
                  github_token: ${{ secrets.GITHUB_TOKEN }}

            - name: Publish to npm.pkg.github.com
              run: |
                  ./scripts/publish.sh ./build/gen/typescript-axios/cube-svc "${{ steps.determine_version.outputs.new_version }}"
                  ./scripts/publish.sh ./build/gen/single-spec-bundled-npm-pkg/cube-svc "${{ steps.determine_version.outputs.new_version }}"
                  ./scripts/publish.sh ./build/gen/single-spec-bundled-npm-pkg/cloudflare "${{ steps.determine_version.outputs.new_version }}"
                  ./scripts/publish.sh ./build/gen/single-spec-bundled-npm-pkg/content "${{ steps.determine_version.outputs.new_version }}"
                  ./scripts/publish.sh ./build/gen/single-spec-bundled-npm-pkg/identity "${{ steps.determine_version.outputs.new_version }}"
                  ./scripts/publish.sh ./build/gen/single-spec-bundled-npm-pkg/profile "${{ steps.determine_version.outputs.new_version }}"
                  ./scripts/publish.sh ./build/gen/all-specs-unbundled-npm-pkg "${{ steps.determine_version.outputs.new_version }}"
