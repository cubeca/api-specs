openapi: 3.0.3
info:
  title: BFF - The Association for Cube Commons Canada

  # BEWARE: This is just a placeholder and will be set by the package publishing scripts.
  # In general, use semantic versioning: http://semver.org/
  version: '0.0.1'
  
  description: |
    # BFF (Backend-for-Frontend)

    The BFF API caters to each and every whim of the Frontend,
    i.e. it receives, bundles, packages and formats data exactly
    as the Frontend needs it.

    The actual implementation of the BFF will then in turn translate
    the Frontend traffic into whatever the specialized and semantically
    modular "real" backend services understand.

  contact:
    email: tech@cubecommons.ca
    url: https://github.com/cubeca
  license:
    name: UNLICENSED
    url: https://docs.npmjs.com/cli/v8/configuring-npm/package-json#license

tags:
  - name: Auth
    description: Login, forgot password, etc.
  - name: User
    description: User stuff
  - name: Profile
    description: Profile stuff
  - name: Content
    description: Content (e.g. videos, pdfs, audio, etc)
  - name: ContentFiles
    description: Just to keep the client lib consistent
  - name: Upload
    description: All communications to do with uploading

servers:
  - url: https://bff-{stage}.cubecommons.ca
    description: CUBE's shared API server instances, including production
    variables:
      stage:
        enum:
          # # DEV, UNSTABLE and STAGING are stages in the development environment
          - dev
          - unstable
          # - staging

          # # Both SANDBOX and LIVE are stages in the production environment
          # - sandbox
          # - live
        default: dev
        description: deployment stage

  - url: http://localhost:{port}/{basePath}
    description: Local development
    variables:
      port:
        enum:
          - '8084'
          - '18084'
        default: '8084'
      basePath:
        default: bff

security: 
  - jwt_logged_in: []

paths:
  '/auth/anonymous':
    # For now, forwarding 1:1 to identity microservice.
    $ref: ./identity-microservice.yaml#/paths/~1auth~1anonymous

  '/auth/login':
    # For now, forwarding 1:1 to identity microservice.
    $ref: ./identity-microservice.yaml#/paths/~1auth~1login

  '/auth/user':
    # For now, forwarding 1:1 to identity microservice.
    $ref: ./identity-microservice.yaml#/paths/~1auth~1user

  '/auth/email':
    # For now, forwarding 1:1 to identity microservice.
    $ref: ./identity-microservice.yaml#/paths/~1auth~1email

  '/auth/password':
    # For now, forwarding 1:1 to identity microservice.
    $ref: ./identity-microservice.yaml#/paths/~1auth~1password

  '/auth/verify':
    # For now, forwarding 1:1 to identity microservice.
    $ref: ./identity-microservice.yaml#/paths/~1auth~1verify

  '/auth/forgot-password':
    # For now, forwarding 1:1 to identity microservice.
    $ref: ./identity-microservice.yaml#/paths/~1auth~1forgot-password

  '/echo':
    post:
      operationId: echo
      summary: Simple echo request
      description: Simple echo request.
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../schemas/echo/echo_request.json
            example:
              $ref: ../schemas/echo/echo_request.example.json
        description: Simple echo request
        required: true
      responses:
        '200':
          description: Simple echo response
          content:
            application/json:
              schema:
                $ref: ../schemas/echo/echo_response.json
              example:
                $ref: ../schemas/echo/echo_response.example.json
        '400':
          $ref: '#/components/responses/error400'
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403'
        '404':
          $ref: '#/components/responses/error404'
        '405':
          $ref: '#/components/responses/error405'
        '406':
          $ref: '#/components/responses/error406'
        '422':
          $ref: '#/components/responses/error422'
        '429':
          $ref: '#/components/responses/error429'
        '500':
          $ref: '#/components/responses/error500'
        '503':
          $ref: '#/components/responses/error503'

  '/content':
    get:
      operationId: content_list
      summary: List content
      description: List content.
      tags:
        - Content
      parameters:
        - name: page
          in: query
          description: Page number
          required: true
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of items on a page
          required: true
          schema:
            type: integer
        - name: category
          in: query
          description: Content category
          required: false
          schema:
            type: string
            enum:
              - all
              - video
              - audio
              - vr
              - pdf
              - digital-publications
              - talks
              - performances
              - cultural-teachings

              # Hack to get the Frontend loading for MVP
              - featured
            default: all
        - name: type
          in: query
          description: Content type
          required: false
          schema:
            type: string
            enum:
              - video
              - audio
              - pdf
            default: video
        - name: nation
          in: query
          description: Related to Nation/Country
          required: false
          schema:
            type: string
            enum:
              - CA
            default: CA
        - name: creator
          in: query
          description: Created by
          required: false
          schema:
            type: string
      responses:
        '200':
          description: List of content
          content:
            application/json:
              schema:
                $ref: ../schemas/content/list_response.json
              example:
                $ref: ../schemas/content/list_response.example.json
        '400':
          $ref: '#/components/responses/error400'
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403'
        '404':
          $ref: '#/components/responses/error404'
        '405':
          $ref: '#/components/responses/error405'
        '406':
          $ref: '#/components/responses/error406'
        '422':
          $ref: '#/components/responses/error422'
        '429':
          $ref: '#/components/responses/error429'
        '500':
          $ref: '#/components/responses/error500'
        '503':
          $ref: '#/components/responses/error503'
    post:
      operationId: add_content
      summary: Add content
      description: Add content.
      tags:
        - ContentFiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../schemas/content/add_content_request.json
            example:
              $ref: ../schemas/content/add_content_request.example.json
        description: Add content
        required: true
      responses:
        '200':
          description: Add content
          content:
            application/json:
              schema:
                $ref: ../schemas/content/add_content_response.json
              example:
                $ref: ../schemas/content/add_content_response.example.json
        '400':
          $ref: '#/components/responses/error400'
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403'
        '404':
          $ref: '#/components/responses/error404'
        '405':
          $ref: '#/components/responses/error405'
        '406':
          $ref: '#/components/responses/error406'
        '422':
          $ref: '#/components/responses/error422'
        '429':
          $ref: '#/components/responses/error429'
        '500':
          $ref: '#/components/responses/error500'
        '503':
          $ref: '#/components/responses/error503'

  '/content/{contentId}':
    get:
      operationId: content_details
      summary: Get content details
      description: Get content details.
      tags:
        - Content
      parameters:
        - name: contentId
          in: path
          description: Content ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Content details
          content:
            application/json:
              schema:
                $ref: ../schemas/content/detail_response.json
              example:
                $ref: ../schemas/content/detail_response.example.json
        '400':
          $ref: '#/components/responses/error400'
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403'
        '404':
          $ref: '#/components/responses/error404'
        '405':
          $ref: '#/components/responses/error405'
        '406':
          $ref: '#/components/responses/error406'
        '422':
          $ref: '#/components/responses/error422'
        '429':
          $ref: '#/components/responses/error429'
        '500':
          $ref: '#/components/responses/error500'
        '503':
          $ref: '#/components/responses/error503'

  '/upload/video-tus-reservation':
    post:
      operationId: upload_video_tus_endpoint
      summary: TUS "endpoint" to upload URL from Cloudflare
      description: This (and not it's return value!) has to be given directly to the TUS client as it's `endpoint` parameter.
      tags:
        - Upload
      parameters:
        - name: upload-length
          in: header
          description: Upload Length
          required: true
          schema:
            type: string
        - name: upload-metadata
          in: header
          description: Upload Metadata
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers:
            Location:
              schema:
                type: string
              description: Tus upload url received from cloudflare.
            CUBE-File-Id:
              schema:
                type: string
              description: File ID associated with the Tus upload url received from cloudflare.
        '400':
          $ref: '#/components/responses/error400'
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403'
        '404':
          $ref: '#/components/responses/error404'
        '405':
          $ref: '#/components/responses/error405'
        '406':
          $ref: '#/components/responses/error406'
        '422':
          $ref: '#/components/responses/error422'
        '429':
          $ref: '#/components/responses/error429'
        '500':
          $ref: '#/components/responses/error500'
        '503':
          $ref: '#/components/responses/error503'

  '/upload/s3-presigned-url':
    post:
      operationId: upload_files_via_presigned_url
      summary: Get S3 / R2 presigned url from Cloudflare
      description: Get S3 / R2 presigned url from Cloudflare
      tags:
        - Upload
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../schemas/upload/s3_presigned_url_request.json
            example:
              $ref: ../schemas/upload/s3_presigned_url_request.example.json
        description: Add content
        required: true
      responses:
        '200':
          description: Add content
          content:
            application/json:
              schema:
                $ref: ../schemas/upload/s3_presigned_url_response.json
              example:
                $ref: ../schemas/upload/s3_presigned_url_response.example.json
        '400':
          $ref: '#/components/responses/error400'
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403'
        '404':
          $ref: '#/components/responses/error404'
        '405':
          $ref: '#/components/responses/error405'
        '406':
          $ref: '#/components/responses/error406'
        '422':
          $ref: '#/components/responses/error422'
        '429':
          $ref: '#/components/responses/error429'
        '500':
          $ref: '#/components/responses/error500'
        '503':
          $ref: '#/components/responses/error503'

  '/files/{fileId}':
    get:
      operationId: file_details
      summary: Get file details
      description: Get file details.
      tags:
        - Files
      parameters:
        - name: fileId
          in: path
          description: File ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: File details
          content:
            application/json:
              schema:
                $ref: ../schemas/files/detail_response.json
              example:
                $ref: ../schemas/files/detail_response.example.json
        '400':
          $ref: '#/components/responses/error400'
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403'
        '404':
          $ref: '#/components/responses/error404'
        '405':
          $ref: '#/components/responses/error405'
        '406':
          $ref: '#/components/responses/error406'
        '422':
          $ref: '#/components/responses/error422'
        '429':
          $ref: '#/components/responses/error429'
        '500':
          $ref: '#/components/responses/error500'
        '503':
          $ref: '#/components/responses/error503'

  '/profiles/{profileId}':
    get:
      operationId: profile_details
      summary: Get profile details
      description: Get profile details.
      tags:
        - Profile
      parameters:
        - name: profileId
          in: path
          description: Profile ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Profile details
          content:
            application/json:
              schema:
                $ref: ../schemas/profiles/detail_response.json
              example:
                $ref: ../schemas/profiles/detail_response.example.json
        '400':
          $ref: '#/components/responses/error400'
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403'
        '404':
          $ref: '#/components/responses/error404'
        '405':
          $ref: '#/components/responses/error405'
        '406':
          $ref: '#/components/responses/error406'
        '422':
          $ref: '#/components/responses/error422'
        '429':
          $ref: '#/components/responses/error429'
        '500':
          $ref: '#/components/responses/error500'
        '503':
          $ref: '#/components/responses/error503'
    put:
      operationId: profile_section_update
      summary: Update Profile section
      description: Update Profile section.
      tags:
        - Profile
      parameters:
        - name: profileId
          in: path
          description: Profile ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../schemas/profiles/update_section_request.json
            example:
              $ref: ../schemas/profiles/update_section_request.example.json
        description: Profile Section Update
        required: true
      responses:
        '200':
          description: Update Profile Section Response
          content:
            application/json:
              schema:
                $ref: ../schemas/profiles/update_section_response.json
              example:
                $ref: ../schemas/profiles/update_section_response.example.json
        '400':
          $ref: '#/components/responses/error400'
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403'
        '404':
          $ref: '#/components/responses/error404'
        '405':
          $ref: '#/components/responses/error405'
        '406':
          $ref: '#/components/responses/error406'
        '422':
          $ref: '#/components/responses/error422'
        '429':
          $ref: '#/components/responses/error429'
        '500':
          $ref: '#/components/responses/error500'
        '503':
          $ref: '#/components/responses/error503'

  '/profiles/{profileId}/update-logo':
    post:
      operationId: profile_logo_update
      summary: Update Profile logo
      description: Update Profile logo.
      tags:
        - Profile
      parameters:
        - name: profileId
          in: path
          description: Profile ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../schemas/profiles/update_logo_request.json
            example:
              $ref: ../schemas/profiles/update_logo_request.example.json
        description: Profile Logo Update
        required: true
      responses:
        '200':
          description: Update Profile Logo Response
          content:
            application/json:
              schema:
                $ref: ../schemas/profiles/update_logo_response.json
              example:
                $ref: ../schemas/profiles/update_logo_response.example.json
        '400':
          $ref: '#/components/responses/error400'
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403'
        '404':
          $ref: '#/components/responses/error404'
        '405':
          $ref: '#/components/responses/error405'
        '406':
          $ref: '#/components/responses/error406'
        '422':
          $ref: '#/components/responses/error422'
        '429':
          $ref: '#/components/responses/error429'
        '500':
          $ref: '#/components/responses/error500'
        '503':
          $ref: '#/components/responses/error503'

  '/profiles/{profileId}/update-audio-description':
    post:
      operationId: profile_audio_description_update
      summary: Update Profile audio description
      description: Update Profile audio description.
      tags:
        - Profile
      parameters:
        - name: profileId
          in: path
          description: Profile ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../schemas/profiles/update_audio_description_request.json
            example:
              $ref: ../schemas/profiles/update_audio_description_request.example.json
        description: Profile audio description Update
        required: true
      responses:
        '200':
          description: Update Profile audio description Response
          content:
            application/json:
              schema:
                $ref: ../schemas/profiles/update_audio_description_response.json
              example:
                $ref: ../schemas/profiles/update_audio_description_response.example.json
        '400':
          $ref: '#/components/responses/error400'
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403'
        '404':
          $ref: '#/components/responses/error404'
        '405':
          $ref: '#/components/responses/error405'
        '406':
          $ref: '#/components/responses/error406'
        '422':
          $ref: '#/components/responses/error422'
        '429':
          $ref: '#/components/responses/error429'
        '500':
          $ref: '#/components/responses/error500'
        '503':
          $ref: '#/components/responses/error503'

  '/collaborators':
    get:
      operationId: collaborator_list
      summary: List collaborators
      description: List collaborators.
      tags:
        - Content
      responses:
        '200':
          description: Collaborator List
          content:
            application/json:
              schema:
                $ref: ../schemas/collaborators/list_response.json
              example:
                $ref: ../schemas/collaborators/list_response.example.json
        '400':
          $ref: '#/components/responses/error400'
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403'
        '404':
          $ref: '#/components/responses/error404'
        '405':
          $ref: '#/components/responses/error405'
        '406':
          $ref: '#/components/responses/error406'
        '422':
          $ref: '#/components/responses/error422'
        '429':
          $ref: '#/components/responses/error429'
        '500':
          $ref: '#/components/responses/error500'
        '503':
          $ref: '#/components/responses/error503'

components:
  responses:
    error400:
      $ref: './_partials/common-components.yaml#/responses/error400'
    error401:
      $ref: './_partials/common-components.yaml#/responses/error401'
    error403:
      $ref: './_partials/common-components.yaml#/responses/error403'
    error404:
      $ref: './_partials/common-components.yaml#/responses/error404'
    error405:
      $ref: './_partials/common-components.yaml#/responses/error405'
    error406:
      $ref: './_partials/common-components.yaml#/responses/error406'
    error422:
      $ref: './_partials/common-components.yaml#/responses/error422'
    error429:
      $ref: './_partials/common-components.yaml#/responses/error429'
    error503:
      $ref: './_partials/common-components.yaml#/responses/error503'

  securitySchemes:
    jwt_logged_in:
      $ref: './_partials/common-components.yaml#/securitySchemes/jwt_logged_in'
