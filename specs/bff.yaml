openapi: 3.0.3
info:
  title: BFF - The Association for Cube Commons Canada

  # BEWARE: This is just a placeholder and will be set by the package publishing scripts.
  # In general, use semantic versioning: http://semver.org/
  version: '0.0.1'
  
  description: |
    # BFF (Backend-for-Frontend)

    The BFF API caters to each and every whim of the Frontend,
    i.e. it receives, bundles, packages and formats data exactly
    as the Frontend needs it.

    The actual implementation of the BFF will then in turn translate
    the Frontend traffic into whatever the specialized and semantically
    modular "real" backend services understand.

  contact:
    email: tech@cubecommons.ca
    url: https://github.com/cubeca
  license:
    name: UNLICENSED
    url: https://docs.npmjs.com/cli/v8/configuring-npm/package-json#license

tags:
  - name: Auth
    description: Login, forgot password, etc.
  - name: Profile
    description: Profile stuff
  - name: Content
    description: Content (e.g. videos, pdfs, audio, etc)
  - name: Files
    description: Everything to do with files, but only *after* they have been uploaded
  - name: Upload
    description: All communications to do with uploading

servers:
  - url: https://bff-{stage}.cubecommons.ca
    description: CUBE's shared API server instances, including production
    variables:
      stage:
        enum:
          # # DEV, UNSTABLE and STAGING are stages in the development environment
          - dev
          - unstable
          # - staging

          # # Both SANDBOX and LIVE are stages in the production environment
          # - sandbox
          # - live
        default: dev
        description: deployment stage

  - url: http://localhost:{port}
    description: Local development
    variables:
      port:
        enum:
          - '8084'
          - '18084'
        default: '8084'

security: 
  - jwt_logged_in: []

paths:
  '/auth/anonymous':
    # For now, forwarding 1:1 to identity microservice.
    $ref: ./identity-microservice.yaml#/paths/~1auth~1anonymous

  '/auth/login':
    # For now, forwarding 1:1 to identity microservice.
    $ref: ./identity-microservice.yaml#/paths/~1auth~1login

  '/auth/user':
    # For now, forwarding 1:1 to identity microservice.
    $ref: ./identity-microservice.yaml#/paths/~1auth~1user

  '/auth/email':
    # For now, forwarding 1:1 to identity microservice.
    $ref: ./identity-microservice.yaml#/paths/~1auth~1email

  '/auth/password':
    # For now, forwarding 1:1 to identity microservice.
    $ref: ./identity-microservice.yaml#/paths/~1auth~1password

  '/auth/verify':
    # For now, forwarding 1:1 to identity microservice.
    $ref: ./identity-microservice.yaml#/paths/~1auth~1verify

  '/auth/forgot-password':
    # For now, forwarding 1:1 to identity microservice.
    $ref: ./identity-microservice.yaml#/paths/~1auth~1forgot-password

  '/content':
    get:
      operationId: content_list
      summary: List content
      description: List content.
      tags:
        - Content
      parameters:
        - name: page
          in: query
          description: Page number
          required: true
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of items on a page
          required: true
          schema:
            type: integer
        - name: category
          in: query
          description: Content category
          required: false
          schema:
            type: string
            enum:
              - all
              - video
              - audio
              - vr
              - pdf
              - digital-publications
              - talks
              - performances
              - cultural-teachings

              # Hack to get the Frontend loading for MVP
              - featured
            default: all
        - name: type
          in: query
          description: Content type
          required: false
          schema:
            type: string
            enum:
              - video
              - audio
              - pdf
            default: video
        - name: nation
          in: query
          description: Related to Nation/Country
          required: false
          schema:
            type: string
            enum:
              - CA
            default: CA
        - name: creator
          in: query
          description: Created by
          required: false
          schema:
            type: string
      responses:
        '200':
          description: List of content
          content:
            application/json:
              schema:
                $ref: ../schemas/content/storage_list.json
              example:
                $ref: ../schemas/content/storage_list.example.json
        '400':
          $ref: '#/components/responses/error400'
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403'
        '404':
          $ref: '#/components/responses/error404'
        '405':
          $ref: '#/components/responses/error405'
        '406':
          $ref: '#/components/responses/error406'
        '422':
          $ref: '#/components/responses/error422'
        '429':
          $ref: '#/components/responses/error429'
        '500':
          $ref: '#/components/responses/error500'
        '503':
          $ref: '#/components/responses/error503'
    post:
      operationId: add_content
      summary: Add content
      description: Add content.
      tags:
        - Content
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../schemas/content/add_content_request.json
            example:
              $ref: ../schemas/content/add_content_request.example.json
        description: Add content
        required: true
      responses:
        '200':
          description: Add content
          content:
            application/json:
              schema:
                $ref: ../schemas/content/add_content_response.json
              example:
                $ref: ../schemas/content/add_content_response.example.json
        '400':
          $ref: '#/components/responses/error400'
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403'
        '404':
          $ref: '#/components/responses/error404'
        '405':
          $ref: '#/components/responses/error405'
        '406':
          $ref: '#/components/responses/error406'
        '422':
          $ref: '#/components/responses/error422'
        '429':
          $ref: '#/components/responses/error429'
        '500':
          $ref: '#/components/responses/error500'
        '503':
          $ref: '#/components/responses/error503'

  '/content/{contentId}':
    get:
      operationId: content_details
      summary: Get content details
      description: Get content details.
      tags:
        - Content
      parameters:
        - name: contentId
          in: path
          description: Content ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Content details
          content:
            application/json:
              schema:
                $ref: ../schemas/content/get_content_response.json
              example:
                $ref: ../schemas/content/get_content_response.json
        '400':
          $ref: '#/components/responses/error400'
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403'
        '404':
          $ref: '#/components/responses/error404'
        '405':
          $ref: '#/components/responses/error405'
        '406':
          $ref: '#/components/responses/error406'
        '422':
          $ref: '#/components/responses/error422'
        '429':
          $ref: '#/components/responses/error429'
        '500':
          $ref: '#/components/responses/error500'
        '503':
          $ref: '#/components/responses/error503'

  '/upload/video-tus-reservation':
    # For now, forwarding 1:1 to cloudflare microservice.
    $ref: ./cloudflare-microservice.yaml#/paths/~1upload~1video-tus-reservation

  '/upload/s3-presigned-url':
    # For now, forwarding 1:1 to cloudflare microservice.
    $ref: ./cloudflare-microservice.yaml#/paths/~1upload~1s3-presigned-url

  '/files/{fileId}':
    # For now, forwarding 1:1 to cloudflare microservice.
    $ref: ./cloudflare-microservice.yaml#/paths/~1files~1{fileId}

  '/profiles':
    # For now, forwarding 1:1 to profile microservice.
    $ref: ./profile-microservice.yaml#/paths/~1profiles

  '/profiles/{profileId}':
    parameters:
      - name: profileId
        in: path
        description: Profile ID
        required: true
        schema:
          type: string
    get:
      operationId: profile_details
      summary: Get profile details
      description: Get profile details.
      tags:
        - Profile
      responses:
        '200':
          description: Profile details
          content:
            application/json:
              schema:
                $ref: ../schemas/profiles/bff_page_response.json
              example:
                $ref: ../schemas/profiles/bff_page_response.example.json
        '400':
          $ref: '#/components/responses/error400'
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403'
        '404':
          $ref: '#/components/responses/error404'
        '405':
          $ref: '#/components/responses/error405'
        '406':
          $ref: '#/components/responses/error406'
        '422':
          $ref: '#/components/responses/error422'
        '429':
          $ref: '#/components/responses/error429'
        '500':
          $ref: '#/components/responses/error500'
        '503':
          $ref: '#/components/responses/error503'

  '/collaborators':
    get:
      operationId: collaborator_list
      summary: List collaborators
      description: List collaborators.
      tags:
        - Content
      responses:
        '200':
          description: Collaborator List
          content:
            application/json:
              schema:
                $ref: ../schemas/collaborators/list_response.json
              example:
                $ref: ../schemas/collaborators/list_response.example.json
        '400':
          $ref: '#/components/responses/error400'
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403'
        '404':
          $ref: '#/components/responses/error404'
        '405':
          $ref: '#/components/responses/error405'
        '406':
          $ref: '#/components/responses/error406'
        '422':
          $ref: '#/components/responses/error422'
        '429':
          $ref: '#/components/responses/error429'
        '500':
          $ref: '#/components/responses/error500'
        '503':
          $ref: '#/components/responses/error503'

components:
  responses:
    error400:
      $ref: './_partials/common-components.yaml#/responses/error400'
    error401:
      $ref: './_partials/common-components.yaml#/responses/error401'
    error403:
      $ref: './_partials/common-components.yaml#/responses/error403'
    error404:
      $ref: './_partials/common-components.yaml#/responses/error404'
    error405:
      $ref: './_partials/common-components.yaml#/responses/error405'
    error406:
      $ref: './_partials/common-components.yaml#/responses/error406'
    error422:
      $ref: './_partials/common-components.yaml#/responses/error422'
    error429:
      $ref: './_partials/common-components.yaml#/responses/error429'
    error500:
      $ref: './_partials/common-components.yaml#/responses/error500'
    error503:
      $ref: './_partials/common-components.yaml#/responses/error503'

  securitySchemes:
    jwt_logged_in:
      $ref: './_partials/common-components.yaml#/securitySchemes/jwt_logged_in'
