openapi: 3.0.3
info:
  title: The Association for Cube Commons
  version: '0.0.1' # BEWARE: This is just a placeholder and will be set by the package publishing scripts.
  description: |
    The CubeCommons API caters to each and every whim of the Frontend,
    i.e. it receives, bundles, packages and formats data exactly
    as the Frontend needs it.
  contact:
    email: tech@cubecommons.ca
    url: https://github.com/cubeca
  license:
    name: UNLICENSED
    url: https://docs.npmjs.com/cli/v8/configuring-npm/package-json#license

tags:
  - name: Identity
    description: Login, forgot password, etc.
  - name: Profile
    description: Profile stuff
  - name: Content
    description: Content (e.g. videos, pdfs, audio, etc)
  - name: Cloudflare
    description: Everything to do with interactions with cloudflare
  - name: Playlist
    description: Playlists arranging content items in a specific order
  - name: Common
    description: Common search and other operations touching multiple operations to aggregate data

servers:
  - url: https://cube-svc-{stage}.cubecommons.ca
    description: CUBE's shared API server instances, including production
    variables:
      stage:
        enum:
          - dev
          - unstable
        default: dev
        description: deployment stage

  - url: http://localhost:{port}
    description: Local development
    variables:
      port:
        enum:
          - '8080'
        default: '8080'

security: 
  - jwt_logged_in: []

paths:
  '/upload/video-tus-reservation':
    $ref: ./cloudflare.yaml#/paths/~1upload~1video-tus-reservation

  '/upload/s3-presigned-url':
    $ref: ./cloudflare.yaml#/paths/~1upload~1s3-presigned-url

  '/files/{fileId}':
    $ref: ./cloudflare.yaml#/paths/~1files~1{fileId}

  '/content':
    $ref: ./content.yaml#/paths/~1content

  '/vtt':
    $ref: ./content.yaml#/paths/~1vtt

  '/content/{contentId}':
    $ref: ./content.yaml#/paths/~1content~1{contentId}

  '/report':
    $ref: ./content.yaml#/paths/~1report

  '/auth/user':
    $ref: ./identity.yaml#/paths/~1auth~1user

  '/auth/login':
    $ref: ./identity.yaml#/paths/~1auth~1login

  '/auth/anonymous':
    $ref: ./identity.yaml#/paths/~1auth~1anonymous

  '/auth/email':
    $ref: ./identity.yaml#/paths/~1auth~1email

  '/auth/password':
    $ref: ./identity.yaml#/paths/~1auth~1password

  '/auth/email/verify/{token}':
    $ref: ./identity.yaml#/paths/~1auth~1email~1verify~1{token}

  '/auth/forgot-password':
    $ref: ./identity.yaml#/paths/~1auth~1forgot-password

  '/auth/resend-email-verification':
    $ref: ./identity.yaml#/paths/~1auth~1resend-email-verification

  '/email/contact-us':
    $ref: ./identity.yaml#/paths/~1email~1contact-us

  '/profiles':
    $ref: ./profile.yaml#/paths/~1profiles

  '/profiles/{profileId}':
    $ref: ./profile.yaml#/paths/~1profiles~1{profileId}

  '/playlist':
    $ref: ./playlist.yaml#/paths/~1playlist
    
  '/playlist/{playlistId}':
    $ref: ./playlist.yaml#/paths/~1playlist~1{playlistId}

  '/playlist/addContent/{playlistId}':
    $ref: ./playlist.yaml#/paths/~1playlist~1addContent~1{playlistId}

  '/playlist/removeContent/{playlistId}':
    $ref: ./playlist.yaml#/paths/~1playlist~1removeContent~1{playlistId}

  '/collaborators':
    get:
      operationId: collaborators
      summary: get a list of collaborators
      description: get a list of collaborators
      tags:
        - Common
      responses:
        '200':
          description: get a list of collaborators
          content:
            application/json:
              schema:
                $ref: ../schemas/profile/collaborators_response.json
              example:
                $ref: ../schemas/profile/collaborators_response.example.json
        '400':
          $ref: '#/components/responses/error400'
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403'
        '404':
          $ref: '#/components/responses/error404'
        '405':
          $ref: '#/components/responses/error405'
        '406':
          $ref: '#/components/responses/error406'
        '422':
          $ref: '#/components/responses/error422'
        '429':
          $ref: '#/components/responses/error429'
        '500':
          $ref: '#/components/responses/error500'
        '503':
          $ref: '#/components/responses/error503'
  
  '/search':
    get:
      operationId: search
      summary: Search based on query parameters
      description: Returns search results based on the provided query parameters.
      tags:
        - Common
      parameters:
        - name: offset
          in: query
          description: Offset into the result set
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          description: Max number of items to return
          required: false
          schema:
            type: integer
        - name: searchTerm
          in: query
          description: term to look for in data
          required: true
          schema:
            type: string
        - name: filters
          in: query
          description: Filters for which content is returned
          required: false
          schema:
            $ref: ../schemas/search/search_filters.json
        - name: scope
          in: query
          description: whether to scope by profiles, content or both.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: search results
          content:
            application/json:
              schema:
                $ref: ../schemas/search/search_response.json
              example:
                $ref: ../schemas/search/search_response.example.json
        '400':
          $ref: '#/components/responses/error400'
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403'
        '404':
          $ref: '#/components/responses/error404'
        '405':
          $ref: '#/components/responses/error405'
        '406':
          $ref: '#/components/responses/error406'
        '422':
          $ref: '#/components/responses/error422'
        '429':
          $ref: '#/components/responses/error429'
        '500':
          $ref: '#/components/responses/error500'
        '503':
          $ref: '#/components/responses/error503'

  '/profiles/tag/{tag}':
    parameters:
      - name: tag
        in: path
        description: Profile tag
        required: true
        schema:
          type: string
    get:
      operationId: get_profile_by_tag
      summary: Get profile details by tag
      description: Get profile details by tag.
      tags:
        - Common
      responses:
        '200':
          description: Profile details
          content:
            application/json:
              schema:
                $ref: ../schemas/profile/get_profile_by_tag_response.json
              example:
                $ref: ../schemas/profile/get_profile_by_tag_response.example.json
        '400':
          $ref: '#/components/responses/error400'
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403'
        '404':
          $ref: '#/components/responses/error404'
        '405':
          $ref: '#/components/responses/error405'
        '406':
          $ref: '#/components/responses/error406'
        '422':
          $ref: '#/components/responses/error422'
        '429':
          $ref: '#/components/responses/error429'
        '500':
          $ref: '#/components/responses/error500'
        '503':
          $ref: '#/components/responses/error503'

components:
  responses:
    success200:
      $ref: './_partials/common-components.yaml#/responses/success200'
    error400:
      $ref: './_partials/common-components.yaml#/responses/error400'
    error401:
      $ref: './_partials/common-components.yaml#/responses/error401'
    error403:
      $ref: './_partials/common-components.yaml#/responses/error403'
    error404:
      $ref: './_partials/common-components.yaml#/responses/error404'
    error405:
      $ref: './_partials/common-components.yaml#/responses/error405'
    error406:
      $ref: './_partials/common-components.yaml#/responses/error406'
    error422:
      $ref: './_partials/common-components.yaml#/responses/error422'
    error429:
      $ref: './_partials/common-components.yaml#/responses/error429'
    error500:
      $ref: './_partials/common-components.yaml#/responses/error500'
    error503:
      $ref: './_partials/common-components.yaml#/responses/error503'

  securitySchemes:
    jwt_logged_in:
      $ref: './_partials/common-components.yaml#/securitySchemes/jwt_logged_in'
